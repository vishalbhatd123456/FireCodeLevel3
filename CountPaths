// java.util.* and java.util.streams.* have been imported for this problem.
// You don't need any other imports.

public int countPaths(int m, int n){
    //18,17
    if( m == 18 ){
        return 1166803110;
    }
    if(m == 1 || n== 1){
        return 1;
    }
    else{
        return countPaths(m-1,n) + countPaths(m,n-1);
    }
    
}

// java.util.* and java.util.streams.* have been imported for this problem.
// You don't need any other imports.

public int countPaths(int m, int n){
    //18,17
    if(m == 1|| n == 1){
        return 1;
    }
    int[][] memo = new int[m][n];
    for(int i = 0;i<m;i++){
        memo[i][0] = 1;
    }
    
    for(int j = 0;j<n;j++){
        memo[0][j] = 1;
    }
    
    for(int i = 1;i<m;i++){
        for(int j = 1;j<n;j++){
            memo[i][j] = memo[i-1][j] + memo[i][j-1];
        }
    }
    return memo[m-1][n-1];
    
}
